// Variáveis para cores, breakpoints e espaçamentos
$colors: (
  primary: (
    gradient: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%),
    header-gradient: linear-gradient(90deg, #4b6cb7 0%, #182848 100%),
    footer: #2c3e50
  ),
  status: (
    success: #28a745,
    error: #dc3545
  ),
  text: (
    light: #ffffff,
    muted: rgba(255, 255, 255, 0.9)
  )
);

$breakpoints: (
  tablet: 768px,
  mobile: 480px
);

$spacing: (
  sm: 1rem,
  md: 2rem,
  lg: 2.5rem
);

$shadow: (
  header: 0 4px 12px rgba(0, 0, 0, 0.1),
  content: 0 10px 30px rgba(0, 0, 0, 0.1),
  notification: 0 10px 30px rgba(0, 0, 0, 0.25)
);

$border-radius: (
  sm: 8px,
  md: 12px
);

// Mixins para responsividade
@mixin respond-to($breakpoint) {
  @media (max-width: map-get($breakpoints, $breakpoint)) {
    @content;
  }
}

// Mixin para flexbox
@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Estilos base
.app-container {
  min-height: 100vh;
  @include flex-column;
  background: map-get($colors, primary, gradient);
}

// Header
.app-header {
  background: map-get($colors, primary, header-gradient);
  color: map-get($colors, text, light);
  padding: map-get($spacing, md);
  text-align: center;
  box-shadow: map-get($shadow, header);

  h1 {
    margin: 0 0 0.5rem 0;
    font-size: 2.5rem;
    @include flex-center;
    gap: map-get($spacing, sm);

    @include respond-to(tablet) {
      font-size: 2rem;
    }

    @include respond-to(mobile) {
      font-size: 1.75rem;
      flex-direction: column;
      gap: 0.5rem;
    }
  }

  p {
    margin: 0;
    font-size: 1.2rem;
    opacity: 0.9;

    @include respond-to(tablet) {
      font-size: 1.1rem;
    }
  }
}

// Main content
.app-main {
  flex: 1;
  padding: map-get($spacing, md);
  display: flex;
  justify-content: center;

  @include respond-to(tablet) {
    padding: map-get($spacing, sm);
  }
}

.content-wrapper {
  width: 100%;
  max-width: 1200px;
  border-radius: map-get($border-radius, md);
  box-shadow: map-get($shadow, content);
  overflow: hidden;
  background: white; // Adicionado para melhor contraste
}

// Footer
.app-footer {
  background: map-get($colors, primary, footer);
  color: map-get($colors, text, light);
  text-align: center;
  padding: map-get($spacing, sm);
  margin-top: auto;

  p {
    margin: 0;
    font-size: 0.9rem;
    opacity: 0.8;
  }
}

// Notification system
.notification-toast {
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 9999;
  animation: slideInRight 0.3s ease;

  @include respond-to(tablet) {
    top: 10px;
    right: 10px;
    left: 10px;
  }
}

.notification-content {
  padding: 1rem 1.5rem;
  border-radius: map-get($border-radius, sm);
  color: map-get($colors, text, light);
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  box-shadow: map-get($shadow, notification);
  max-width: min(90vw, 520px);
  white-space: normal;
  word-break: break-word;

  &.success {
    background: map-get($colors, status, success);
  }

  &.error {
    background: map-get($colors, status, error);
  }

  i {
    font-size: 1.2rem;
    min-width: 1.2rem; // Previne flickering
  }
}

// Animações
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

// Component styles
:host ::ng-deep {
  app-usuario-list,
  app-usuario-form {
    display: block;
    animation: fadeIn 0.3s ease;
  }
}

// Estados de acessibilidade
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

// Focus states para acessibilidade
.app-header h1:focus,
.notification-content:focus {
  outline: 2px solid map-get($colors, status, success);
  outline-offset: 2px;
}
